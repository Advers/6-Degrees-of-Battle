--@name 6DoB Arena Generator
--@author jon b
--@shared

local AsteroidProps = {
    "models/props_wasteland/rockgranite01a.mdl",
    "models/props_wasteland/rockgranite01b.mdl",
    "models/props_wasteland/rockgranite01c.mdl",
    "models/props_wasteland/rockgranite02a.mdl",
    "models/props_wasteland/rockgranite02b.mdl",
    "models/props_wasteland/rockgranite02c.mdl",
    "models/props_wasteland/rockgranite03a.mdl",
    "models/props_wasteland/rockgranite03b.mdl",
    "models/props_wasteland/rockgranite03c.mdl",
    "models/props_wasteland/rockgranite04a.mdl",
    "models/props_wasteland/rockgranite04b.mdl",
    "models/props_wasteland/rockgranite04c.mdl",
    "models/props_debris/concrete_chunk01a.mdl",
    "models/props_debris/concrete_chunk01b.mdl",
    "models/props_debris/concrete_chunk01c.mdl",
    "models/props_debris/concrete_chunk02a.mdl",
    "models/props_debris/concrete_chunk02b.mdl",
    "models/props_debris/concrete_chunk03a.mdl",
    "models/props_debris/concrete_chunk04a.mdl",
    "models/props_debris/concrete_chunk05g.mdl",
    "models/props_debris/concrete_chunk06c.mdl",
    "models/props_debris/concrete_chunk06d.mdl",
    "models/props_debris/concrete_chunk07a.mdl",
    "models/props_debris/concrete_chunk08a.mdl",
    "models/props_debris/concrete_chunk09a.mdl",
    "models/props_debris/concrete_column001a_base.mdl",
    "models/props_debris/concrete_column001a_chunk01.mdl",
    "models/props_debris/concrete_column001a_chunk02.mdl",
    "models/props_debris/concrete_column001a_chunk03.mdl",
    "models/props_debris/concrete_column001a_chunk04.mdl",
    "models/props_debris/concrete_column001a_chunk05.mdl",
    "models/props_debris/concrete_column001a_chunk06.mdl",
    "models/props_debris/concrete_column001a_chunk07.mdl",
    "models/props_debris/concrete_column001a_chunk08.mdl",
    "models/props_debris/concrete_column001a_chunk09.mdl",
    "models/props_junk/rock001a.mdl"
}
local Planets = {}


local ilast = 0
local I = 0

local ArenaOffset = Vector(0,0,0)
local AsteroidCount = 1000
local PlanetCount = 10
local ArenaRadius = 8000

if SERVER then
    
    --space sphere
    space = hologram.create(Vector(),Angle(),"models/XQM/Rails/gumball_1.mdl",Vector(-ArenaRadius/12.25))
    space:setColor(Color(0,0,0))
    space:setMaterial("model_color")
    
    
    --planet creation
    for I = 1, PlanetCount do
        
        local mass = math.random(100000000,1000000000)
        
        local holo = hologram.create(Vector(math.sqrt(math.random())*ArenaRadius,0,0):getRotated(Angle(math.rand(-90,90),math.rand(-180,180),0))+ArenaOffset,Angle(math.random(-180,180)),"models/XQM/Rails/gumball_1.mdl",Vector(mass)/100000000)
        holo:setColor(Color(math.random(50,255),math.random(50,255),math.random(50,255)))
        
        Planets[I] = {holo,holo:getPos(),mass}
        
        I = I+1
        
    end
    
    --asteroid creation
    local asteroidspawn = coroutine.create( function()
        
        for I=1, AsteroidCount do

            if I - ilast == prop.spawnRate() then
                ilast = I
                coroutine.wait(1)
            end
            
            local Prop = prop.create(Vector(math.sqrt(math.random())*ArenaRadius,0,0):getRotated(Angle(math.rand(-90,90),math.rand(-180,180),0))+ArenaOffset,Angle(math.random(-180,180)),AsteroidProps[math.random(1,table.count(AsteroidProps))],false)
            Prop:setMaterial("models/props_canal/rock_riverbed01a")
            Prop:enableGravity(false)
        end
        
    end )
    
    coroutine.resume( asteroidspawn )
    
    hook.add("Think", "AsteroidSpawn", function()
        
        if coroutine.status(asteroidspawn) == "suspended" then
            coroutine.resume(asteroidspawn)
        end
        
    end)

end